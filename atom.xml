<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sanakey的小站</title>
  
  <subtitle>前端小小白</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sanakey.github.io/"/>
  <updated>2018-07-03T09:21:24.479Z</updated>
  <id>https://sanakey.github.io/</id>
  
  <author>
    <name>Sanakey</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序--自定义tabBar组件</title>
    <link href="https://sanakey.github.io/2018/07/03/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%87%AA%E5%AE%9A%E4%B9%89tabBar%E7%BB%84%E4%BB%B6/"/>
    <id>https://sanakey.github.io/2018/07/03/微信小程序-自定义tabBar组件/</id>
    <published>2018-07-03T08:01:12.000Z</published>
    <updated>2018-07-03T09:21:24.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>用过微信提供的tabBar组件就会发现，局限性不少，样式上的局限性不说，tabBar是写在app.json配置文件中的，这就意味着不能动态改变tabBar的个数，不能在tabBar上面添加函数等等。</p><p>加上最近客户有需求，要求tabBar动态改变个数，于是折腾许久写了一个，分享出来。</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="wxml"><a href="#wxml" class="headerlink" title="wxml"></a>wxml</h3><p>wxml模板<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">"tabBar"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"tabBar"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;tabBar&#125;&#125;"</span> <span class="attr">wx:for-item</span>=<span class="string">"item"</span> <span class="attr">wx:key</span>=<span class="string">"tabBar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"tabBar-item"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">bindtap</span>=<span class="string">"goTab"</span> <span class="attr">data-path</span>=<span class="string">"&#123;&#123;item.pagePath&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span>&gt;</span><span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">src</span>=<span class="string">'&#123;&#123;item.iconPath&#125;&#125;'</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"&#123;&#123;item.active== true ? 'tabBartext' :''&#125;&#125;"</span>&gt;</span>&#123;&#123;item.text&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="wxss"><a href="#wxss" class="headerlink" title="wxss"></a>wxss</h3><p>wxss模板<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">54</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">54</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tabBar</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">90</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">bottom</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">10</span>rpx;</span><br><span class="line">  <span class="attribute">background</span>:<span class="number">#F7F7FA</span>;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#8A8A8A</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">6</span>rpx <span class="number">6</span>rpx <span class="number">6</span>rpx <span class="number">6</span>rpx <span class="number">#aaa</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.tabBar-item</span>&#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">120</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tabBartext</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#1296DB</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="tabbar数据"><a href="#tabbar数据" class="headerlink" title="tabbar数据"></a>tabbar数据</h3><p>tabbar的数据采用仿照官方原生tabbar配置文件的写法，可以通过后台更改值实现tabbar个数的动态变化。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tabbarData = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"active"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"id"</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="string">"pagePath"</span>: <span class="string">"/pages/index/index"</span>,</span><br><span class="line">    <span class="string">"iconPath"</span>: <span class="string">"/imgs/icon/index.png"</span>,</span><br><span class="line">    <span class="string">"selectedIconPath"</span>: <span class="string">"/imgs/icon/index-s.png"</span>,</span><br><span class="line">    <span class="string">"text"</span>: <span class="string">"首页"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"active"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">"pagePath"</span>: <span class="string">"/pages/classify/classify"</span>,</span><br><span class="line">    <span class="string">"iconPath"</span>: <span class="string">"/imgs/icon/classify.png"</span>,</span><br><span class="line">    <span class="string">"selectedIconPath"</span>: <span class="string">"/imgs/icon/classify-s.png"</span>,</span><br><span class="line">    <span class="string">"text"</span>: <span class="string">"分类"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"active"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">"pagePath"</span>: <span class="string">"/pages/cart/cart"</span>,</span><br><span class="line">    <span class="string">"iconPath"</span>: <span class="string">"/imgs/icon/cart.png"</span>,</span><br><span class="line">    <span class="string">"selectedIconPath"</span>: <span class="string">"/imgs/icon/cart-s.png"</span>,</span><br><span class="line">    <span class="string">"text"</span>: <span class="string">"购物车"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"active"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">"pagePath"</span>: <span class="string">"/pages/store/store"</span>,</span><br><span class="line">    <span class="string">"iconPath"</span>: <span class="string">"/imgs/icon/store.png"</span>,</span><br><span class="line">    <span class="string">"selectedIconPath"</span>: <span class="string">"/imgs/icon/store-s.png"</span>,</span><br><span class="line">    <span class="string">"text"</span>: <span class="string">"门店"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"active"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"id"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">"pagePath"</span>: <span class="string">"/pages/user/user"</span>,</span><br><span class="line">    <span class="string">"iconPath"</span>: <span class="string">"/imgs/icon/user.png"</span>,</span><br><span class="line">    <span class="string">"selectedIconPath"</span>: <span class="string">"/imgs/icon/user-s.png"</span>,</span><br><span class="line">    <span class="string">"text"</span>: <span class="string">"我的"</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure></p><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><p>首先是公用方法，在utils.js文件里添加下面的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tabbar的样式切换</span></span><br><span class="line"><span class="comment">//id 当前页面在tabBar数组中的下标</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tabbar</span>(<span class="params">bindName, id, target, tabbarData</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> that = target;</span><br><span class="line">  <span class="keyword">var</span> bindData = &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> newTabbar = tabbarData;</span><br><span class="line">  newTabbar[id][<span class="string">'iconPath'</span>] = newTabbar[id][<span class="string">'selectedIconPath'</span>]</span><br><span class="line">  newTabbar[id][<span class="string">'active'</span>] = <span class="literal">true</span>;</span><br><span class="line">  bindData[bindName] = newTabbar</span><br><span class="line">  that.setData(&#123; bindData &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// tab跳转</span></span><br><span class="line"><span class="comment">//id 当前页面在tabBar数组中的下标</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">goTab</span>(<span class="params">e, that, id</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> path = e.currentTarget.dataset.path;</span><br><span class="line">  <span class="comment">// 防止重复点击跳转</span></span><br><span class="line">  <span class="keyword">if</span> (path === that.data.bindData.tabBar[id].pagePath) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  wx.reLaunch(&#123;</span><br><span class="line">    url: path,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出方法</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  tabbar: tabbar,</span><br><span class="line">  goTab: goTab,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在要使用tabbar的页面wxml里引入以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import src=&quot;../template/tabbar/tabbar-template.wxml&quot; /&gt;</span><br><span class="line">&lt;template is=&quot;tabBar&quot; data=&quot;&#123;&#123;tabBar:bindData.tabBar&#125;&#125;&quot;/&gt;</span><br></pre></td></tr></table></figure></p><p>wxss里面引入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;../template/tabbar/tabbar-template.wxss&quot; ;</span><br></pre></td></tr></table></figure></p><p>在要使用tabbar的页面引入utils方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var utils = require(&quot;../../utils/util.js&quot;);</span><br></pre></td></tr></table></figure></p><p>首页的js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> utils = <span class="built_in">require</span>(<span class="string">"../../utils/util.js"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> utils = <span class="built_in">require</span>(<span class="string">"../../utils/util.js"</span>);</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line"></span><br><span class="line">   &#125;,</span><br><span class="line"></span><br><span class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> tabbarData = <span class="string">"后台请求获取到上面的tabbar数据"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询包含首页字符的页面id</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkData</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> item.text == <span class="string">"首页"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> tabbarId = tabbarData.find(checkData).id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      tabbarId: tabbarId</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用utils.tabbar方法，切换tabbar的样式。</span></span><br><span class="line">    utils.tabbar(<span class="string">"tabBar"</span>, that.data.tabbarId, that, tabbarData);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//引用的数组因为切换样式时数据被修改，保存到本地存储时是被修改状态</span></span><br><span class="line">    <span class="comment">//我们需要的是数据从后台传来时的初始状态，进行下列还原操作</span></span><br><span class="line">    <span class="comment">//也可以对数组进行深度拷贝，对拷贝的数组进行存储操作</span></span><br><span class="line">    tabbarData[<span class="number">0</span>].active = <span class="literal">false</span>;</span><br><span class="line">    tabbarData[<span class="number">0</span>].iconPath = <span class="string">"/imgs/icon/index.png"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//避免每次加载tabbar页面都发送请求，首页加载成功后保存在本地存储。</span></span><br><span class="line">    wx.setStorageSync(<span class="string">"tabbarData"</span>, tabbarData);</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Tabbar跳转</span></span><br><span class="line">  goTab:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    utils.goTab(e, <span class="keyword">this</span>, <span class="keyword">this</span>.data.tabbarId)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>其他要显示tabbar页面的js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> utils = <span class="built_in">require</span>(<span class="string">"../../utils/util.js"</span>);</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line"></span><br><span class="line">   &#125;,</span><br><span class="line"></span><br><span class="line">  onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 获取tabbar数组的初始状态</span></span><br><span class="line">      <span class="keyword">var</span> tabbarData = wx.getStorageSync(<span class="string">"tabbarData"</span>);</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">checkData</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> item.text == <span class="string">"分类"</span>;</span><br><span class="line">        <span class="comment">//其他页面赋值右边的字符串输入对应的页面描述，如"购物车"，"我的"</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">var</span> tabbarId = tabbarData.find(checkData).id;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        tabbarId: tabbarId</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      utils.tabbar(<span class="string">"tabBar"</span>, <span class="keyword">this</span>.data.tabbarId, <span class="keyword">this</span>, tabbarData);</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">    <span class="comment">// Tabbar跳转</span></span><br><span class="line">    goTab:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">      utils.goTab(e, <span class="keyword">this</span>, <span class="keyword">this</span>.data.tabbarId)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>这样效果就实现了，后台改变传递过来的参数，tabbar的数量可以动态改变。</p><p>如果大家有什么更好的实现方法，欢迎讨论交流。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;用过微信提供的tabBar组件就会发现，局限性不少，样式上的局限性不说，tabBar是写在app.json配置文件中的，这就意味着不能动态改变tabBar的个数，不能在tabBar上面添加函数等等。&lt;/p&gt;
&lt;p&gt;加上最近客户有需求，要求tabBar动态改变个数，于是折腾许久写了一个，分享出来。&lt;/p&gt;
    
    </summary>
    
      <category term="微信小程序" scheme="https://sanakey.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="https://sanakey.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="JavaScript" scheme="https://sanakey.github.io/tags/JavaScript/"/>
    
      <category term="小程序" scheme="https://sanakey.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="Demo" scheme="https://sanakey.github.io/tags/Demo/"/>
    
  </entry>
  
  <entry>
    <title>Git与Github常用命令</title>
    <link href="https://sanakey.github.io/2018/07/02/Git%E4%B8%8EGithub%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://sanakey.github.io/2018/07/02/Git与Github常用命令/</id>
    <published>2018-07-02T03:43:27.000Z</published>
    <updated>2018-07-03T06:52:49.320Z</updated>
    
    <content type="html"><![CDATA[<p>工作中经常会使用到<code>git</code>命令来进行代码托管与备份，总结了一些常用场景下的命令，在此分享出来。<br><a id="more"></a></p><h2 id="托管自己编写的代码"><a href="#托管自己编写的代码" class="headerlink" title="托管自己编写的代码"></a>托管自己编写的代码</h2><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin git@github.com:my/test.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><ol><li><p>首先在<code>GitHub</code>上创建一个仓库，把地址复制下来，如：<code>https://github.com/my/test.git</code></p></li><li><p>打开<code>GitBash</code>，<code>cd</code>到要提交的项目根目录下，输入<code>git init</code>命令初始化仓库，此时在项目文件夹下会出现<code>.git</code>隐藏文件夹</p></li></ol><ol start="3"><li><p>使用命令<code>git add .</code>添加所有文件到暂存区。在修改代码之后，可以单独使用<code>git add 文件名</code>（后面是你修改过的文件） 添加指定修改的文件到暂存区</p></li><li><p><code>git commit -m &quot;first commit&quot;</code>，提交代码。<code>&quot;first commit&quot;</code>部分为本次提交的更新说明</p></li><li><p>关联远程仓库：<code>git remote add origin https://github.com/my/test.git</code>（后面是你的仓库地址）</p></li><li><p>我们可以通过命令<code>git status</code>来查看是否还有文件未提交，如果有红色文字出现，说明还有文件未提交。</p></li><li><p><code>git push -u origin master</code> （推送到远程仓库）。</p></li></ol><p>由于远程库是空的，我们第一次推送<code>master</code>分支时，加上了 <code>–u</code>参数，<code>Git</code>不但会把本地的<code>master</code>分支内容推送到远程新的<code>master</code>分支，还会把本地的<code>master</code>分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时，只要做了提交就可以使用命令<code>git push origin master</code>进行推送。</p><h3 id="可能出现的错误"><a href="#可能出现的错误" class="headerlink" title="可能出现的错误"></a>可能出现的错误</h3><h4 id="一、错误信息"><a href="#一、错误信息" class="headerlink" title="一、错误信息"></a>一、错误信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">my@my MINGW64 /e/gitProjects/text (master)</span><br><span class="line">$ git push origin master</span><br><span class="line">To git@github.com:my/text.git</span><br><span class="line"> ! [rejected]        master -&gt; master (fetch first)</span><br><span class="line">error: failed to push some refs to &apos;git@github.com:my/text.git&apos;</span><br><span class="line">hint: Updates were rejected because the remote contains work that you do</span><br><span class="line">hint: not have locally. This is usually caused by another repository pushing</span><br><span class="line">hint: to the same ref. You may want to first integrate the remote changes</span><br><span class="line">hint: (e.g., &apos;git pull ...&apos;) before pushing again.</span><br><span class="line">hint: See the &apos;Note about fast-forwards&apos; in &apos;git push --help&apos; for details.</span><br></pre></td></tr></table></figure><h4 id="二、问题分析"><a href="#二、问题分析" class="headerlink" title="二、问题分析"></a>二、问题分析</h4><p>出现这种问题的原因一般都是代码仓库存在本地没有的文件。</p><p>到<code>github</code>上查看远程<code>repository</code>，会发现有一个<code>README.md</code>文件（本地代码中没有），而出现错误的原因是<code>github</code>中的<code>README.md</code>文件不在本地代码目录中。</p><p>也就是说我们需要先将远程代码库中的任何文件先<code>pull</code>到本地代码库中，才能<code>push</code>新的代码到<code>github</code>代码库中。</p><h4 id="三、解决问题"><a href="#三、解决问题" class="headerlink" title="三、解决问题"></a>三、解决问题</h4><p>方法一</p><ol><li><p>将远程代码库中的代码<code>pull</code>到本地代码库，并且执行合并<code>merge</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull --rebase origin master</span><br></pre></td></tr></table></figure></li><li><p>再次<code>push</code>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure></li></ol><p>我们看到本地代码已经成功的提交到远程代码中，至此问题解决。</p><p>方法二</p><p>在创建仓库时，不要勾选生成<code>README.md</code>文件。</p><p>方法三<br>在创建仓库时，如果勾选生成<code>README.md</code>文件，可以复制项目地址，在想提交的项目根目录下，使用命令<code>git clone git@github.com:my/test.git</code>，然后再进行上述的第三步以及之后的操作。</p><h2 id="修改fork的代码之后提交"><a href="#修改fork的代码之后提交" class="headerlink" title="修改fork的代码之后提交"></a>修改fork的代码之后提交</h2><p>如何在<code>github</code>上面将他人的项目拷贝到自己的本地，修改代码之后重新上传到自己的项目主页，同时通知原项目开发者。</p><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone &quot;刚才fork下来后项目的地址&quot;</span><br><span class="line">git remote add upstream &quot;项目原地址&quot;</span><br><span class="line">git fetch upstream</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;更新说明&quot;</span><br><span class="line">git push &quot;fork后的地址&quot;</span><br></pre></td></tr></table></figure><h3 id="步骤说明-1"><a href="#步骤说明-1" class="headerlink" title="步骤说明"></a>步骤说明</h3><ol><li>在任意一个<code>github</code>项目上点击<code>Fork</code>到自己的主页</li><li><p><code>clone</code>到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &apos;刚才fork下来后项目的地址&apos;</span><br></pre></td></tr></table></figure></li><li><p>在刚才<code>clone</code>下来的文件夹内，添加与原始库的关联，命名为<code>upstream</code>，此地址是原项目开发者的项目主页上的<code>clone</code>的地址，这是专门用来与主开发者保持相同进度的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add upstream &quot;项目原地址&quot;</span><br></pre></td></tr></table></figure></li></ol><p>从原始库中抓取最新的更新，我们需要使用是<code>git fetch upstream</code>命令。这命令会自动选择更改过的代码文件进行更新。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch upstream</span><br></pre></td></tr></table></figure></p><ol start="4"><li><p>在本地修改完文件测试完成之后，将代码提交到我们自己的<code>fork</code>出来的项目主页。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;更新说明&quot;</span><br><span class="line">git push &apos;fork后的地址&apos;</span><br></pre></td></tr></table></figure></li><li><p>在项目主页代码目录如图所示的位置，点击绿色的按钮，然后就可以比较你的版本和源中代码的差别，然后就可以选择发送一个<code>Pull request</code>给主开发者，添加修改的原因描述。然后就等待主开发者去<code>merge</code>了。</p></li></ol><p><img src="https://s1.ax2x.com/2018/07/02/nkjYB.png" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作中经常会使用到&lt;code&gt;git&lt;/code&gt;命令来进行代码托管与备份，总结了一些常用场景下的命令，在此分享出来。&lt;br&gt;
    
    </summary>
    
      <category term="Github" scheme="https://sanakey.github.io/categories/Github/"/>
    
    
      <category term="github" scheme="https://sanakey.github.io/tags/github/"/>
    
      <category term="git" scheme="https://sanakey.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序入门--事件</title>
    <link href="https://sanakey.github.io/2018/07/01/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A5%E9%97%A8-%E4%BA%8B%E4%BB%B6/"/>
    <id>https://sanakey.github.io/2018/07/01/微信小程序入门-事件/</id>
    <published>2018-07-01T14:19:51.000Z</published>
    <updated>2018-07-02T02:41:23.728Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前面我曾写过一篇介绍微信小程序实现二级菜单的小教程，里面留下了一个坑，那就是关于小程序里的事件，当时并没有过多介绍。</p><p>对于新人来说，<code>bind</code>与<code>catch</code>、<code>event</code>对象里的<code>target</code>与<code>currentTarget</code>是一道门槛，需要我们花点心思去搞明白它们的区别，在工作中才能灵活运用，提高开发效率。</p><p>好了，接下来开始详细介绍它们的区别。<br><a id="more"></a></p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>我们从下面的例子来对事件进行详细说明</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>wxml<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"fl-row"</span> <span class="attr">bindtap</span>=<span class="string">"parent"</span> <span class="attr">data-str</span>=<span class="string">"我是最外层的父级"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'item'</span> <span class="attr">data-str</span>=<span class="string">"我是红色部分"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"li"</span> <span class="attr">data-str</span>=<span class="string">"我是蓝色部分"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'text'</span> <span class="attr">catchtap</span>=<span class="string">"child"</span> <span class="attr">data-str</span>=<span class="string">"我是产品"</span>&gt;</span>产品<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'item'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"li"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">'text'</span>&gt;</span>空间<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>wxss<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.fl-row</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20</span>rpx <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.li</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text</span>&#123;</span><br><span class="line"> <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">50</span>rpx <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>javascript<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">parent: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(e);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"触发了bindTap事件"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">child: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(e);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"触发了catchTap事件"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ol><li>点击黄色的文字部分，打印结果如图所示</li></ol><p><img src="https://s1.ax2x.com/2018/07/01/ntoAX.png" alt="image"></p><p>可以看到，触发了<code>catchtap</code>事件，<code>event</code>对象里<code>target</code>与<code>currentTarget</code>的自定义数据<code>str</code>打印的结果都是“我是产品”。</p><ol start="2"><li>点击蓝色部分，打印结果如图所示</li></ol><p><img src="https://s1.ax2x.com/2018/07/01/ntqql.png" alt="image"></p><p>这次，触发了<code>bindtap</code>事件，<code>target</code>打印结果为“我是蓝色部分”，<code>currentTarget</code>打印结果为“我是最外层的父级”。没有在蓝色的<code>&lt;view&gt;</code>添加任何事件，却触发了绑定在父级的<code>bindtap</code>事件，这就是冒泡事件的机制，js里可以利用冒泡进行事件代理，把事件代码写在父级，在父级内的元素，就算是后来动态添加进去的元素，也会触发该事件。</p><ol start="3"><li>点击红色部分，打印结果如图所示</li></ol><p><img src="https://s1.ax2x.com/2018/07/01/n63jJ.png" alt="image"></p><p>最后，触发了<code>bindtap</code>事件，<code>target</code>打印结果为“我是红色部分”，<code>currentTarget</code>打印结果为“我是最外层的父级”。</p><h2 id="事件详解"><a href="#事件详解" class="headerlink" title="事件详解"></a>事件详解</h2><h3 id="事件分类"><a href="#事件分类" class="headerlink" title="事件分类"></a>事件分类</h3><p>事件分为冒泡事件和非冒泡事件：</p><blockquote><ol><li>冒泡事件：当一个组件上的事件被触发后，该事件会向父节点传递。</li><li>非冒泡事件：当一个组件上的事件被触发后，该事件不会向父节点传递。</li></ol></blockquote><p>微信小程序中的冒泡事件(2.1.1)</p><table><thead><tr><th>类型</th><th>触发条件</th></tr></thead><tbody><tr><td>touchstart</td><td>手指触摸动作开始</td></tr><tr><td>touchmove</td><td>手指触摸后移动</td></tr><tr><td>touchcancel</td><td>手指触摸动作被打断，如来电提醒，弹窗</td></tr><tr><td>touchend</td><td>手指触摸动作结束</td></tr><tr><td>tap</td><td>手指触摸后马上离开</td></tr><tr><td>longpress</td><td>手指触摸后，超过350ms再离开，如果指定了事件回调函数并触发了这个事件，tap事件将不被触发</td></tr><tr><td>longtap</td><td>手指触摸后，超过350ms再离开（推荐使用longpress事件代替）</td></tr><tr><td>transitionend</td><td>会在 WXSS transition 或 wx.createAnimation 动画结束后触发</td></tr><tr><td>animationstart</td><td>会在一个 WXSS animation 动画开始时触发</td></tr><tr><td>animationiteration</td><td>会在一个 WXSS animation 一次迭代结束时触发</td></tr><tr><td>animationend</td><td>会在一个 WXSS animation 动画完成时触发</td></tr><tr><td>touchforcechange</td><td>在支持 3D Touch 的 iPhone 设备，重按时会触发</td></tr></tbody></table><p><strong>微信小程序大多都是冒泡事件，优先发生最里面容器设置的事件，然后发生父容器设置的事件</strong></p><h3 id="bind与catch区别"><a href="#bind与catch区别" class="headerlink" title="bind与catch区别"></a>bind与catch区别</h3><blockquote><p><code>bind</code>事件绑定不会阻止冒泡事件向上冒泡，<code>catch</code>事件绑定可以阻止冒泡事件向上冒泡。</p></blockquote><h3 id="target与currentTarget"><a href="#target与currentTarget" class="headerlink" title="target与currentTarget"></a>target与currentTarget</h3><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>target</td><td>触发事件的组件的一些属性值集合</td></tr><tr><td>currentTarget</td><td>当前组件的一些属性值集合</td></tr></tbody></table><p>总结</p><ul><li><code>event.target</code>指的是触发事件的源组件。点击时所处位置最里面的那个容器 (捕获到最里面时)</li><li><code>event.currentTarget</code> 指的是事件绑定的当前组件。点击事件设置的那个容器。(冒泡到最外面时)</li></ul><h3 id="测试结果分析"><a href="#测试结果分析" class="headerlink" title="测试结果分析"></a>测试结果分析</h3><p>再次回到测试结果</p><ol><li>点击黄色</li></ol><p><code>target</code>的目标是触发事件的源组件，这里是黄色文字，<code>currentTarget</code>目标是设置事件的最外层父级。因为文字部分绑定了<code>catchtap</code>事件，<code>catch</code>事件会阻止事件冒泡，因此事件在文字点击后不会继续往上传递。<code>target</code>与<code>currentTarget</code>打印结果都是“我是产品”。</p><ol start="2"><li><p>点击蓝色<br><code>target</code>的目标是触发事件的源组件，这里是蓝色背景，因此<code>target</code>打印结果为“我是蓝色”。<code>currentTarget</code>目标是设置事件的最外层父级，<code>bind</code>事件不阻止事件冒泡。<code>currentTarget</code>打印结果为“我是最外层父级”。</p></li><li><p>点击红色<br>点击红色与点击蓝色时同理。</p></li></ol><p><code>bind</code>与<code>catch</code>、<code>event</code>对象里的<code>target</code>与<code>currentTarget</code>的讲解到这里就结束了。不知道大家有没有对事件有更深一步的理解了呢？</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html" target="_blank" rel="noopener">微信小程序官方文档–事件</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前面我曾写过一篇介绍微信小程序实现二级菜单的小教程，里面留下了一个坑，那就是关于小程序里的事件，当时并没有过多介绍。&lt;/p&gt;
&lt;p&gt;对于新人来说，&lt;code&gt;bind&lt;/code&gt;与&lt;code&gt;catch&lt;/code&gt;、&lt;code&gt;event&lt;/code&gt;对象里的&lt;code&gt;target&lt;/code&gt;与&lt;code&gt;currentTarget&lt;/code&gt;是一道门槛，需要我们花点心思去搞明白它们的区别，在工作中才能灵活运用，提高开发效率。&lt;/p&gt;
&lt;p&gt;好了，接下来开始详细介绍它们的区别。&lt;br&gt;
    
    </summary>
    
      <category term="微信小程序" scheme="https://sanakey.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="https://sanakey.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="JavaScript" scheme="https://sanakey.github.io/tags/JavaScript/"/>
    
      <category term="小程序" scheme="https://sanakey.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序入门--二级菜单</title>
    <link href="https://sanakey.github.io/2018/06/27/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A5%E9%97%A8-%E4%BA%8C%E7%BA%A7%E8%8F%9C%E5%8D%95/"/>
    <id>https://sanakey.github.io/2018/06/27/微信小程序入门-二级菜单/</id>
    <published>2018-06-27T09:54:24.000Z</published>
    <updated>2018-06-30T05:45:37.140Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在前端开发中，我们经常会遇到样式切换操作。</p><p>在浏览器环境下，使用原生JS或jQuery可以很方便的对dom进行操作，从而达到基本的样式切换效果。但是在微信小程序中没有dom，我们不能直接对dom进行操作。</p><p>这应该会让之前一直在浏览器环境开发且没有接触过数据驱动类框架的朋友很不习惯，每当遇到样式切换操作时，清除其他样式，给当前点击元素添加样式的思想已经深入骨髓，这种情况下去接触小程序，确实一时半会转不过神来。</p><p>现在就由我来以二级菜单为例，给大家简单介绍一下基于数据驱动的样式切换该怎样实现。<br>这是完成效果图<br><img src="https://s1.ax2x.com/2018/06/27/nz4Sa.png" alt="image"><br><a id="more"></a></p><h2 id="选项卡菜单"><a href="#选项卡菜单" class="headerlink" title="选项卡菜单"></a>选项卡菜单</h2><p>在做二级菜单之前，我们从简单的开始，先来做一个最常见的一级选项卡菜单</p><h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><p>首先是wxml部分<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'nav'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'&#123;&#123;num==0?"active":""&#125;&#125;'</span> <span class="attr">data-num</span>=<span class="string">'0'</span> <span class="attr">catchtap</span>=<span class="string">'changeClass'</span>&gt;</span>22<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'&#123;&#123;num==1?"active":""&#125;&#125;'</span> <span class="attr">data-num</span>=<span class="string">'1'</span> <span class="attr">catchtap</span>=<span class="string">'changeClass'</span>&gt;</span>33<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'&#123;&#123;num==2?"active":""&#125;&#125;'</span> <span class="attr">data-num</span>=<span class="string">'2'</span> <span class="attr">catchtap</span>=<span class="string">'changeClass'</span>&gt;</span>233<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>然后是样式部分，选中时字体变红<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.active</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20</span>rpx <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">view</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20</span>rpx <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>js部分<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">changeClass:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e);</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        num: e.target.dataset.num;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="解释一下思路"><a href="#解释一下思路" class="headerlink" title="解释一下思路"></a>解释一下思路</h3><h4 id="思路选择"><a href="#思路选择" class="headerlink" title="思路选择"></a>思路选择</h4><p>总结一下我们在浏览器环境下的样式切换思路</p><blockquote><ol><li>通过js查找到元素然后修改其class名</li><li>添加一个class名，覆盖前面的样式</li><li>修改行内样式，覆盖其他的样式</li></ol></blockquote><p>这个思路在小程序里同样适用，只是实现方法稍微有点不一样</p><ol><li><p>修改class名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;&#123;&#123;className&#125;&#125;&quot;&gt;&lt;/view&gt;</span><br><span class="line">//&#123;&#123;&#125;&#125;内的className为变量，js里通过setData方法修改这个变量，页面会实时刷新，再也不用操作dom节点查找元素啦~</span><br></pre></td></tr></table></figure></li><li><p>添加一个class2，覆盖前面的class1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;class1 &#123;&#123;class2&#125;&#125;&quot;&gt;&lt;/view&gt;</span><br></pre></td></tr></table></figure></li><li><p>修改行内样式，覆盖其他的样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;class1&quot; style=&quot;&#123;&#123;newStyle&#125;&#125;&quot;&gt;&lt;/view&gt;</span><br></pre></td></tr></table></figure></li></ol><p>方法一和方法二实际上非常像，推荐使用这两种。</p><h4 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明"></a>详细说明</h4><p>接下来我们回到最先写的wxml上面，双花括号内是支持简单运算的，所以使用三目运算符也没问题。这里的<code>num</code>对应js文件里面<code>data</code>的变量，相当于<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    num: <span class="literal">undefined</span>, <span class="comment">//只声明不初始化的情况下，变量的初始值为undefined</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure></p><blockquote><p>WXML 中的动态数据均来自对应 Page 的 data。</p></blockquote><p>当<code>num==0</code>时，这里元素的<code>class</code>名就会变为<code>active</code>，否则为空。因此我们的目的就是<strong>切换num值来改变样式</strong>。那么怎么切换<code>num</code>值呢？</p><p>我们接着看，会发现<code>data-num=&#39;0&#39;</code>这个属性，在微信小程序中，允许通过以<code>data-</code>开头的方式来自定义变量，这里面的数据会传到事件对象中，在本例中，可以在点击事件触发后，在<br><code>e.target.dataset.num</code>的里面获取到自定义的<code>data-num</code>值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">e  <span class="comment">//事件对象，通过事件函数的一个参数传递，可以是任何值</span></span><br><span class="line">target   <span class="comment">//事件捕获的元素</span></span><br><span class="line">dataset   <span class="comment">//以data-开头定义的变量</span></span><br><span class="line">num   <span class="comment">//data-num的值</span></span><br><span class="line"><span class="comment">// 关于target和currentTarget，catchtap事件和bindtap事件我会专门用一篇文章介绍</span></span><br></pre></td></tr></table></figure><p>最后我们通过<code>catchtap</code>事件，利用微信小程序自带的<code>this.setData</code>方法修改<code>num</code>的值为当前点击<br>的元素里定义的<code>data-num</code>值。也就是<strong>num的值==当前点击的元素num时，class名改变</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        num: e.target.dataset.num;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></p><p>当我们点击一个菜单时，触发<code>catchtap</code>事件，num值改变。三目运算符触发判断，相等时就会返回<code>active</code>。</p><p>这样，利用数据绑定的形式修改样式的效果就达到了。</p><p>接下来进行二级菜单的代码书写</p><h2 id="二级菜单"><a href="#二级菜单" class="headerlink" title="二级菜单"></a>二级菜单</h2><p>废话不多说，先上代码</p><h3 id="代码部分-1"><a href="#代码部分-1" class="headerlink" title="代码部分"></a>代码部分</h3><p>wxml部分<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"top-select"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"fl-row"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;menuList&#125;&#125;"</span> <span class="attr">wx:for-item</span>=<span class="string">"listItem"</span> <span class="attr">wx:for-index</span>=<span class="string">"listIndex"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--//template 一级菜单--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">bindtap</span>=<span class="string">"changeClass"</span> <span class="attr">class</span>=<span class="string">"item &#123;&#123;listItem.isChecked?'active':''&#125;&#125;"</span> <span class="attr">data-num</span>=<span class="string">"&#123;&#123;listItem.listId&#125;&#125;"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;listItem.title&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"angle"</span>&gt;</span><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"iconfont icon-xiangxiazhankai"</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">bindtap</span>=<span class="string">"changeClass2"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;menuList&#125;&#125;"</span> <span class="attr">wx:for-item</span>=<span class="string">"listItem"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--//template 二级菜单--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"show-list"</span>  <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;listItem.isChecked&#125;&#125;"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;listItem.item&#125;&#125;"</span> <span class="attr">wx:for-item</span>=<span class="string">"childItem"</span> <span class="attr">class</span>=<span class="string">"&#123;&#123;goodsTitle==childItem.Name?'select':''&#125;&#125;"</span> <span class="attr">data-name</span>=<span class="string">"&#123;&#123;childItem.Name&#125;&#125;"</span>&gt;</span></span><br><span class="line">            &#123;&#123;childItem.Name&#125;&#125;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>wxss部分<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*折叠菜单  */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fl-row</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20</span>rpx <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.top-select</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20</span>rpx <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.top-select</span> <span class="selector-class">.item</span> <span class="selector-tag">text</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.top-select</span> <span class="selector-class">.item</span> <span class="selector-class">.angle</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#229bc9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.active</span> <span class="selector-tag">text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 倒三角箭头动画，使用css动画性能更好，缺点是首次加载时，会看到一次复原动画*/</span></span><br><span class="line"><span class="selector-class">.angle</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line"><span class="attribute">animation</span>: <span class="number">0.3s</span> rotatereturn forwards;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.active</span> <span class="selector-class">.angle</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">animation</span>: <span class="number">0.3s</span> rotatestart forwards;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">keyframes</span> rotatestart &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(0deg) ;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(180deg) ;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">keyframes</span> rotatereturn &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(180deg);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(0deg);</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*菜单子项  */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.show-list</span> &#123;</span><br><span class="line">   <span class="attribute">background</span>: <span class="number">#229bc9</span>;</span><br><span class="line">   <span class="attribute">padding-bottom</span>: <span class="number">20</span>rpx;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.show-list</span> <span class="selector-tag">view</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">26</span>rpx;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">10</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.actived</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.select</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#f72424</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>js部分<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> menuList = []; <span class="comment">//后台获取的menuList数组(菜单数据)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//后台获取的menuList绑定到data里面，方便wxml读取。</span></span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        menuList: menuList;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 一级列表点击事件</span></span><br><span class="line">  changeClass: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当前点击元素的num值</span></span><br><span class="line">    <span class="keyword">var</span> idx = e.currentTarget.dataset.num;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取已绑定过的后台菜单数据menuList</span></span><br><span class="line">    <span class="keyword">var</span> menuList = <span class="keyword">this</span>.data.menuList;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给一级菜单添加自定义属性isChecked，用来记录是否点击状态</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; menuList.length; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> Item = menuList[i];</span><br><span class="line">      <span class="comment">// 如果菜单的索引值listId==点击元素的num值</span></span><br><span class="line">      <span class="keyword">if</span>(Item.listId == idx)&#123;</span><br><span class="line">      <span class="comment">// 一级菜单自定义属性isChecked取反</span></span><br><span class="line">        Item.isChecked = !Item.isChecked;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 否则一级菜单自定义属性isChecked初始化为false</span></span><br><span class="line">      <span class="keyword">else</span>&#123;</span><br><span class="line">        Item.isChecked = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        menuList: menuList,  <span class="comment">//更新isChecked的状态</span></span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 二级列表点击事件</span></span><br><span class="line">  changeClass2 : <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">    <span class="comment">//当前点击的二级子菜单每个元素的自定义name值，动态更新给goodsTitle</span></span><br><span class="line">      goodsTitle: e.target.dataset.name</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>菜单数据部分<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> menuList = [</span><br><span class="line">  &#123;</span><br><span class="line">    title: <span class="string">"产品"</span>,</span><br><span class="line">    listId: <span class="number">0</span>,</span><br><span class="line">    item: [</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">0</span>, <span class="attr">Name</span>: <span class="string">"产品0"</span>,  <span class="attr">Type</span>: <span class="number">1</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">1</span>, <span class="attr">Name</span>: <span class="string">"产品1"</span>,  <span class="attr">Type</span>: <span class="number">1</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">2</span>, <span class="attr">Name</span>: <span class="string">"产品2"</span>,  <span class="attr">Type</span>: <span class="number">1</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">3</span>, <span class="attr">Name</span>: <span class="string">"产品3"</span>,  <span class="attr">Type</span>: <span class="number">1</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">4</span>, <span class="attr">Name</span>: <span class="string">"产品4"</span>,  <span class="attr">Type</span>: <span class="number">1</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">5</span>, <span class="attr">Name</span>: <span class="string">"产品5"</span>,  <span class="attr">Type</span>: <span class="number">1</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">6</span>, <span class="attr">Name</span>: <span class="string">"产品6"</span>,  <span class="attr">Type</span>: <span class="number">1</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">7</span>, <span class="attr">Name</span>: <span class="string">"产品7"</span>,  <span class="attr">Type</span>: <span class="number">1</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">8</span>, <span class="attr">Name</span>: <span class="string">"产品8"</span>,  <span class="attr">Type</span>: <span class="number">1</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">9</span>, <span class="attr">Name</span>: <span class="string">"产品9"</span>,  <span class="attr">Type</span>: <span class="number">1</span> &#125;]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: <span class="string">"风格"</span>,</span><br><span class="line">    listId: <span class="number">1</span>,</span><br><span class="line">    item: [</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">0</span>, <span class="attr">Name</span>: <span class="string">"风格0"</span>,  <span class="attr">Type</span>: <span class="number">2</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">1</span>, <span class="attr">Name</span>: <span class="string">"风格1"</span>,  <span class="attr">Type</span>: <span class="number">2</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">2</span>, <span class="attr">Name</span>: <span class="string">"风格2"</span>,  <span class="attr">Type</span>: <span class="number">2</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">3</span>, <span class="attr">Name</span>: <span class="string">"风格3"</span>,  <span class="attr">Type</span>: <span class="number">2</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">4</span>, <span class="attr">Name</span>: <span class="string">"风格4"</span>,  <span class="attr">Type</span>: <span class="number">2</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">5</span>, <span class="attr">Name</span>: <span class="string">"风格5"</span>,  <span class="attr">Type</span>: <span class="number">2</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">6</span>, <span class="attr">Name</span>: <span class="string">"风格6"</span>,  <span class="attr">Type</span>: <span class="number">2</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">7</span>, <span class="attr">Name</span>: <span class="string">"风格7"</span>,  <span class="attr">Type</span>: <span class="number">2</span> &#125;]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: <span class="string">"实景案例"</span>,</span><br><span class="line">    listId: <span class="number">2</span>,</span><br><span class="line">    item: [</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">0</span>, <span class="attr">Name</span>: <span class="string">"实景案例0"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">1</span>, <span class="attr">Name</span>: <span class="string">"实景案例1"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">2</span>, <span class="attr">Name</span>: <span class="string">"实景案例2"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">3</span>, <span class="attr">Name</span>: <span class="string">"实景案例3"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">4</span>, <span class="attr">Name</span>: <span class="string">"实景案例4"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">5</span>, <span class="attr">Name</span>: <span class="string">"实景案例5"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">6</span>, <span class="attr">Name</span>: <span class="string">"实景案例6"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">7</span>, <span class="attr">Name</span>: <span class="string">"实景案例7"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">8</span>, <span class="attr">Name</span>: <span class="string">"实景案例8"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">9</span>, <span class="attr">Name</span>: <span class="string">"实景案例9"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">10</span>, <span class="attr">Name</span>: <span class="string">"实景案例10"</span>,  <span class="attr">Type</span>: <span class="number">3</span> &#125;]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    title: <span class="string">"ICC产品"</span>,</span><br><span class="line">    listId: <span class="number">3</span>,</span><br><span class="line">    item: [</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">0</span>, <span class="attr">Name</span>: <span class="string">"ICC产品0"</span>,  <span class="attr">Type</span>: <span class="number">4</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">1</span>, <span class="attr">Name</span>: <span class="string">"ICC产品1"</span>,  <span class="attr">Type</span>: <span class="number">4</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">2</span>, <span class="attr">Name</span>: <span class="string">"ICC产品2"</span>,  <span class="attr">Type</span>: <span class="number">4</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">3</span>, <span class="attr">Name</span>: <span class="string">"ICC产品3"</span>,  <span class="attr">Type</span>: <span class="number">4</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">4</span>, <span class="attr">Name</span>: <span class="string">"ICC产品4"</span>,  <span class="attr">Type</span>: <span class="number">4</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">5</span>, <span class="attr">Name</span>: <span class="string">"ICC产品5"</span>,  <span class="attr">Type</span>: <span class="number">4</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">6</span>, <span class="attr">Name</span>: <span class="string">"ICC产品6"</span>,  <span class="attr">Type</span>: <span class="number">4</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">7</span>, <span class="attr">Name</span>: <span class="string">"ICC产品7"</span>,  <span class="attr">Type</span>: <span class="number">4</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">ID</span>: <span class="number">8</span>, <span class="attr">Name</span>: <span class="string">"ICC产品8"</span>,  <span class="attr">Type</span>: <span class="number">4</span> &#125;]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><h3 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h3><p>大家应该发现了，一级菜单时代码还很少，二级菜单时代码突然变得多了起来，别急，我们一步步慢慢来。</p><p>第一个例子一级菜单，比较适用于菜单选项固定不变的场景，但是实际开发中，我们常常需要动态改变菜单个数和菜单选项，因此菜单数据需要从后台加载获取。</p><h4 id="第一级菜单"><a href="#第一级菜单" class="headerlink" title="第一级菜单"></a>第一级菜单</h4><p>先从<code>wxml</code>部分说起，看一级菜单部分，这里会看到新标签<code>block</code>，<code>block</code>是一个不会实际渲染出来的标签，主要用来结合<code>wx:for</code>或<code>wx:if</code>之类的表达式来进行条件渲染被<code>block</code>包住的元素。</p><blockquote><p>在组件上使用 <code>wx:for</code>控制属性绑定一个数组，即可使用数组中各项的数据重复渲染该组件。<br>默认数组的当前项的下标变量名<code>wx:for-index</code>值默认为<code>index</code>，数组当前项的变量名<code>wx:for-item</code>值默认为<code>item</code><br><code>wx:for-index=&quot;idx&quot;</code> <code>wx:for-item=&quot;itemName&quot;</code>可以修改对应的变量名</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wx:<span class="keyword">for</span>=<span class="string">"&#123;&#123;menuList&#125;&#125;"</span></span><br><span class="line"><span class="comment">//要循环渲染的数组为menuList，就是菜单数据部分同名的menuList数组，后台接收</span></span><br><span class="line">wx:<span class="keyword">for</span>-item=<span class="string">"listItem"</span></span><br><span class="line"><span class="comment">//menuList里的每个数组子项json的命名为listItem</span></span><br><span class="line">wx:<span class="keyword">for</span>-index=<span class="string">"listIndex"</span></span><br><span class="line"><span class="comment">//menuList里的每个数组子项json的下标为listIndex</span></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><p><code>block</code>里的元素<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bindtap=<span class="string">"changeClass"</span></span><br><span class="line"><span class="comment">//一级菜单改变类名的事件</span></span><br><span class="line"><span class="class"><span class="keyword">class</span></span>=<span class="string">"item &#123;&#123;listItem.isChecked?'active':''&#125;&#125;"</span></span><br><span class="line"><span class="comment">//三目运算符 判断是否切换为active</span></span><br><span class="line">data-num=<span class="string">"&#123;&#123;listItem.listId&#125;&#125;"</span></span><br><span class="line"><span class="comment">//自定义的num值，实际值来源于menuList每个子项listItem的listId，用来传递到点击事件event对象里</span></span><br><span class="line">&#123;&#123;listItem.title&#125;&#125;</span><br><span class="line"><span class="comment">// menuList每个子项listItem的title</span></span><br></pre></td></tr></table></figure></p><p>一级菜单点击事件发生时，会触发<code>changeClass</code>里的事件(具体过程js代码内有详细说明)，当前点击的<code>listItem.isChecked</code>会变为<code>true</code>，<code>class</code>名就会设置为<code>active</code>，二级菜单<code>wx:if</code>满足条件，执行渲染。这样，一级菜单切换样式的效果就完成了。</p><h4 id="第二级菜单"><a href="#第二级菜单" class="headerlink" title="第二级菜单"></a>第二级菜单</h4><p><code>block</code>里的元素<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wx:<span class="keyword">if</span>=<span class="string">"&#123;&#123;listItem.isChecked&#125;&#125;"</span></span><br><span class="line"><span class="comment">//条件渲染，如果listItem.isChecked为真才渲染</span></span><br><span class="line">wx:<span class="keyword">for</span>=<span class="string">"&#123;&#123;listItem.item&#125;&#125;"</span></span><br><span class="line"><span class="comment">//要循环渲染的数组为menuList里listItem的item，</span></span><br><span class="line">wx:<span class="keyword">for</span>-item=<span class="string">"childItem"</span></span><br><span class="line"><span class="comment">//listItem.item里的每个子项命名为childItem，</span></span><br><span class="line"><span class="class"><span class="keyword">class</span></span>=<span class="string">"&#123;&#123;goodsTitle==childItem.Name?'select':''&#125;&#125;"</span></span><br><span class="line"><span class="comment">//goodsTitle是当前点击的元素的name值，是否和元素自带的name相等</span></span><br><span class="line">data-name=<span class="string">"&#123;&#123;childItem.Name&#125;&#125;"</span></span><br><span class="line"><span class="comment">// 自定义的name值，实际值来源于childItem的Name，用来传递到点击事件event对象里</span></span><br></pre></td></tr></table></figure></p><p>当二级菜单里的点击事件发生时，用<code>event</code>对象获取到当前点击的元素自定义的<code>name</code>值，然后用<code>this.setData</code>赋值给<code>goodsTitle</code>，<br>判断<code>goodsTitle</code>是否和原数据里自带<code>Name</code>值相等，是则样式设置为<code>select</code>。</p><p>这样，二级菜单切换样式的效果也完成了。</p><h4 id="个人精力与能力有限，如果发现什么错误的地方，欢迎各位评论区批评指出。"><a href="#个人精力与能力有限，如果发现什么错误的地方，欢迎各位评论区批评指出。" class="headerlink" title="个人精力与能力有限，如果发现什么错误的地方，欢迎各位评论区批评指出。"></a><em>个人精力与能力有限，如果发现什么错误的地方，欢迎各位评论区批评指出。</em></h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在前端开发中，我们经常会遇到样式切换操作。&lt;/p&gt;
&lt;p&gt;在浏览器环境下，使用原生JS或jQuery可以很方便的对dom进行操作，从而达到基本的样式切换效果。但是在微信小程序中没有dom，我们不能直接对dom进行操作。&lt;/p&gt;
&lt;p&gt;这应该会让之前一直在浏览器环境开发且没有接触过数据驱动类框架的朋友很不习惯，每当遇到样式切换操作时，清除其他样式，给当前点击元素添加样式的思想已经深入骨髓，这种情况下去接触小程序，确实一时半会转不过神来。&lt;/p&gt;
&lt;p&gt;现在就由我来以二级菜单为例，给大家简单介绍一下基于数据驱动的样式切换该怎样实现。&lt;br&gt;这是完成效果图&lt;br&gt;&lt;img src=&quot;https://s1.ax2x.com/2018/06/27/nz4Sa.png&quot; alt=&quot;image&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="微信小程序" scheme="https://sanakey.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="https://sanakey.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="JavaScript" scheme="https://sanakey.github.io/tags/JavaScript/"/>
    
      <category term="小程序" scheme="https://sanakey.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="Demo" scheme="https://sanakey.github.io/tags/Demo/"/>
    
  </entry>
  
  <entry>
    <title>Github Pages+Hexo从零开始的免费建站教程</title>
    <link href="https://sanakey.github.io/2018/06/26/Github-Pages-Hexo%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%85%8D%E8%B4%B9%E5%BB%BA%E7%AB%99%E6%95%99%E7%A8%8B/"/>
    <id>https://sanakey.github.io/2018/06/26/Github-Pages-Hexo从零开始的免费建站教程/</id>
    <published>2018-06-26T06:00:08.000Z</published>
    <updated>2018-06-30T02:06:44.136Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Github-Pages和Hexo简介"><a href="#Github-Pages和Hexo简介" class="headerlink" title="Github Pages和Hexo简介"></a>Github Pages和Hexo简介</h2><p>Github Pages 其实就是 Github 提供的博客服务。你可以理解为github免费提供给你的服务器，而Hexo就是你可以快速发表博客的工具。</p><ul><li>有过建站经验的小伙伴应该都清楚，如果自己想搭建一个属于自己的网站，首先得有一个服务器给你保存数据，购买了服务器之后，服务提供商会给你提供一个服务器的ip地址，此时你只能通过ip地址对你的服务器进行访问，如果你想通过类似于baidu.com的域名形式对自己的服务器进行访问，你还需要购买一个域名地址，而<strong>Github Pages免费给你提供了服务器和域名两项服务。</strong></li><li>服务器和域名都搭建好后，如果不是刻意想从零实现网站的每个页面，大部分人都会选择使用别人造好的轮子，类似于WordPress的框架，而Hexo就是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</li></ul><p>好了，简单的介绍完了，接下来开始正式建站。<br><a id="more"></a></p><h2 id="使用Github-Pages"><a href="#使用Github-Pages" class="headerlink" title="使用Github Pages"></a>使用Github Pages</h2><p>注册 Github 账号， <a href="https://github.com/" target="_blank" rel="noopener">进入注册</a>，然后在 Github 中创建一个以 .github.io 结尾的 Repository。<br><img src="https://s1.ax2x.com/2018/06/26/nH319.png" alt="image"></p><ol><li>Repository name: 你的github用户名.github.io</li><li>勾选 Initialize this repository with a README</li><li>点击Create repository<br><img src="https://s1.ax2x.com/2018/06/26/nHDdO.png" alt="image"></li></ol><h3 id="系统环境配置"><a href="#系统环境配置" class="headerlink" title="系统环境配置"></a>系统环境配置</h3><p>在安装Hexo前，你的系统需要支持Nodejs以及Git，如果还没有，那就立刻开始安装吧！</p><h3 id="下载安装Node-js"><a href="#下载安装Node-js" class="headerlink" title="下载安装Node.js"></a>下载安装Node.js</h3><p><a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">安装Node.js教程</a></p><p><a href="https://nodejs.org" target="_blank" rel="noopener">下载前往Node.js</a></p><h3 id="下载安装Git"><a href="#下载安装Git" class="headerlink" title="下载安装Git"></a>下载安装Git</h3><p>下载地址：<a href="https://note.youdao.com/" target="_blank" rel="noopener">http://git-scm.com/download/</a></p><p>下载成功后，打开程序然后按默认选项安装即可。<br><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000" target="_blank" rel="noopener">git相关教程</a></p><h3 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h3><p>git安装成功后，在桌面右键，点击git bash here，此时会打开一个类似于cmd命令行一样的窗口，此时我们要在本地创建ssh key，(这个key相当于通行证)，命令行输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>“你的邮箱地址”改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。</p><p>成功的话会在C:\Users\Administrator文件夹里生成.ssh文件夹，得到两个文件id_rsa和id_rsa.pub。打开id_rsa.pub，复制里面的key。</p><h3 id="在GitHub上添加SSH密钥"><a href="#在GitHub上添加SSH密钥" class="headerlink" title="在GitHub上添加SSH密钥"></a>在GitHub上添加SSH密钥</h3><p>回到github上，进入 Account Settings（账户配置），<a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys</a>，点击右上角New SSH Key，title随便填，粘贴在你电脑上生成的key。</p><p>好了，此时你的电脑和github账号的通道就建立好了，你可以提交本地数据到github上了。</p><h2 id="使用Hexo"><a href="#使用Hexo" class="headerlink" title="使用Hexo"></a>使用Hexo</h2><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>命令行输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><p>回车，等待系统安装，安装完成后</p><p>继续输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure></p><p>如果能看到版本号说明安装成功。</p><h3 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h3><p>在D盘新建一个blog文件夹，在此文件夹内右键，git bash here，依次输入下面的命令，每输入一行按一次回车<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init  //将 blog 文件夹初始化成一个博客文件夹</span><br><span class="line">npm install  //安装依赖包</span><br><span class="line">hexo g  //生成网页</span><br><span class="line">hexo s  //将生成的网页放在本地服务器，默认端口是4000</span><br></pre></td></tr></table></figure></p><p>在浏览器输入<code>http://localhost:4000/</code>，回车就可以看到效果了。</p><p>如果想关闭服务器，按Ctrl+C可以退出，关闭命令行窗口也可以退出。</p><h3 id="发布博文"><a href="#发布博文" class="headerlink" title="发布博文"></a>发布博文</h3><p>如果你刚才没有关闭命令行窗口，继续输入命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章标题，可以自定义&quot;   //新建一篇文章</span><br></pre></td></tr></table></figure></p><p>此时在你的D:\blog\source\_posts文件夹内，会看到一个”文章标题，可以自定义.md”文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题，可以自定义</span><br><span class="line">date: 2018-06-30 09:00:00 #发表日期，一般不改动</span><br><span class="line">categories: hexo #文章分类</span><br><span class="line">tags: [hexo,github] #文章标签，多项时使用这种格式</span><br><span class="line">---</span><br><span class="line">正文，使用Markdown语法书写</span><br></pre></td></tr></table></figure><p>使用文本编辑器打开(建议使用支持markdown语法的编辑器)，就可以使用markdown语法进行文章的书写了，如果不懂markdown语法，<a href="http://wowubuntu.com/markdown/basic.html" target="_blank" rel="noopener">请点击这里学习</a></p><p>保存之后退出，使用命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   //生成网页</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p>再次前往 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 查看，此时可以发现刚才新建的文章成功添加了。</p><h3 id="将本地Hexo博客部署到Github上"><a href="#将本地Hexo博客部署到Github上" class="headerlink" title="将本地Hexo博客部署到Github上"></a>将本地Hexo博客部署到Github上</h3><p>打开d/blog/_config.yml文件</p><p>找到<code>#Deployment</code>，修改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: 你创建的博客项目的github地址.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p><strong>注意，这里有几个坑</strong></p><ul><li>配置文件名“:”后要加一个空格，否则会报错;<br><img src="https://s1.ax2x.com/2018/06/26/nFnkH.png" alt="image"></li><li>repository这里最好使用项目的git地址，比如我的就是<code>git@github.com:Sanakey/Sanakey.github.io.git</code>，你可以在自己的github项目里点击图中的按钮复制该地址<br><img src="https://s1.ax2x.com/2018/06/26/nFwpu.png" alt="image"></li></ul><p>保存后退出，安装 hexo-deployer-git，输入命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g -d  //生成网页并部署</span><br></pre></td></tr></table></figure></p><p>看到返回<code>INFO Deploy done: git</code>，说明部署成功</p><p>在浏览器输入<code>你的github用户名.github.io</code>，查看自己的博客网站吧!</p><p>关于主题等高级技巧，我们下次再聊~~！</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="built_in">help</span> #查看帮助</span><br><span class="line">hexo init #初始化一个目录</span><br><span class="line">hexo new "postName" #新建文章</span><br><span class="line">hexo new page "pageName" #新建页面</span><br><span class="line">hexo generate #生成网页，可以在 public 目录查看整个网站的文件</span><br><span class="line">hexo server #本地预览，'Ctrl+C'关闭</span><br><span class="line">hexo deploy #部署.deploy目录</span><br><span class="line">hexo clean #清除缓存，**强烈建议每次执行部署命令前先使用该命令清理缓存**</span><br></pre></td></tr></table></figure><h3 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><h3 id="全局配置-config-yml"><a href="#全局配置-config-yml" class="headerlink" title="全局配置 _config.yml"></a>全局配置 _config.yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"><span class="comment"># Site #站点信息</span></span><br><span class="line"><span class="attr">title:</span>  <span class="comment">#标题</span></span><br><span class="line"><span class="attr">subtitle:</span>  <span class="comment">#副标题</span></span><br><span class="line"><span class="attr">description:</span>  <span class="comment">#站点描述，给搜索引擎看的</span></span><br><span class="line"><span class="attr">author:</span>  <span class="comment">#作者</span></span><br><span class="line"><span class="attr">email:</span>  <span class="comment">#你的电子邮箱</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment">#语言，这里使用中文就行</span></span><br><span class="line"><span class="comment"># URL #链接格式</span></span><br><span class="line"><span class="attr">url:</span>  <span class="comment">#博客网址</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span> <span class="comment">#根目录</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span> <span class="comment">#文章的链接格式</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span> <span class="comment">#标签目录</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span> <span class="comment">#存档目录</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span> <span class="comment">#分类目录</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="comment"># Directory #目录</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span> <span class="comment">#源文件目录</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span> <span class="comment">#生成的网页文件目录</span></span><br><span class="line"><span class="comment"># Writing #写作</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment">#新文章标题</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span> <span class="comment">#默认的模板，包括 post、page、photo、draft（文章、页面、照片、草稿）</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment">#标题转换成大写</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment">#是否在新选项卡中打开连接</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">highlight:</span> <span class="comment">#语法高亮</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span> <span class="comment">#是否启用</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span> <span class="comment">#显示行号</span></span><br><span class="line"><span class="attr">  tab_replace:</span></span><br><span class="line"><span class="comment"># Category &amp; Tag #分类和标签</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span> <span class="comment">#默认分类</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"><span class="comment"># Archives</span></span><br><span class="line"><span class="number">2</span><span class="string">:</span> <span class="string">开启分页</span></span><br><span class="line"><span class="number">1</span><span class="string">:</span> <span class="string">禁用分页</span></span><br><span class="line"><span class="number">0</span><span class="string">:</span> <span class="string">全部禁用</span></span><br><span class="line"><span class="attr">archive:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">category:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">tag:</span> <span class="number">2</span></span><br><span class="line"><span class="comment"># Server #本地服务器</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">4000</span> <span class="comment">#端口号</span></span><br><span class="line"><span class="attr">server_ip:</span> <span class="string">localhost</span> <span class="comment">#IP 地址</span></span><br><span class="line"><span class="attr">logger:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">logger_format:</span> <span class="string">dev</span></span><br><span class="line"><span class="comment"># Date / Time format #日期时间格式</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span> <span class="comment">#参考http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">H:mm:ss</span></span><br><span class="line"><span class="comment"># Pagination #分页</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span> <span class="comment">#每页文章数，设置成 0 禁用分页</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"><span class="comment"># Disqus #Disqus评论，替换为多说</span></span><br><span class="line"><span class="attr">disqus_shortname:</span></span><br><span class="line"><span class="comment"># Extensions #拓展插件</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape-plus</span> <span class="comment">#主题</span></span><br><span class="line"><span class="attr">exclude_generator:</span></span><br><span class="line"><span class="attr">plugins:</span> <span class="comment">#插件，例如生成 RSS 和站点地图的</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-sitemap</span></span><br><span class="line"><span class="comment"># Deployment #部署</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">你创建的博客项目的github地址.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h2 id="关于Hexo"><a href="#关于Hexo" class="headerlink" title="关于Hexo"></a>关于Hexo</h2><p>想了解更多关于Hexo的内容，请点击查看<br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方中文文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Github-Pages和Hexo简介&quot;&gt;&lt;a href=&quot;#Github-Pages和Hexo简介&quot; class=&quot;headerlink&quot; title=&quot;Github Pages和Hexo简介&quot;&gt;&lt;/a&gt;Github Pages和Hexo简介&lt;/h2&gt;&lt;p&gt;Github Pages 其实就是 Github 提供的博客服务。你可以理解为github免费提供给你的服务器，而Hexo就是你可以快速发表博客的工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有过建站经验的小伙伴应该都清楚，如果自己想搭建一个属于自己的网站，首先得有一个服务器给你保存数据，购买了服务器之后，服务提供商会给你提供一个服务器的ip地址，此时你只能通过ip地址对你的服务器进行访问，如果你想通过类似于baidu.com的域名形式对自己的服务器进行访问，你还需要购买一个域名地址，而&lt;strong&gt;Github Pages免费给你提供了服务器和域名两项服务。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;服务器和域名都搭建好后，如果不是刻意想从零实现网站的每个页面，大部分人都会选择使用别人造好的轮子，类似于WordPress的框架，而Hexo就是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好了，简单的介绍完了，接下来开始正式建站。&lt;br&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://sanakey.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://sanakey.github.io/tags/github/"/>
    
      <category term="博客" scheme="https://sanakey.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="建站" scheme="https://sanakey.github.io/tags/%E5%BB%BA%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>My First Post</title>
    <link href="https://sanakey.github.io/2018/06/25/My-First-Post/"/>
    <id>https://sanakey.github.io/2018/06/25/My-First-Post/</id>
    <published>2018-06-25T08:19:06.000Z</published>
    <updated>2018-06-25T08:22:32.757Z</updated>
    
    <content type="html"><![CDATA[<p>#HelloWorld<br>我的第一篇博文</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#HelloWorld&lt;br&gt;我的第一篇博文&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sanakey.github.io/2018/06/25/hello-world/"/>
    <id>https://sanakey.github.io/2018/06/25/hello-world/</id>
    <published>2018-06-25T08:12:50.800Z</published>
    <updated>2018-06-25T08:12:50.800Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
